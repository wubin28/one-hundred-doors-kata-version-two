{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n.\nTime: 0.027\n\nOK (1 test)\n\n","instructions":"100 doors in a row are all initially closed. You make\n100 passes by the doors. The first time through, you\nvisit every door and toggle the door (if the door is\nclosed, you open it; if it is open, you close it).\nThe second time you only visit every 2nd door (door\n#2, #4, #6, ...). The third time, every 3rd door\n(door #3, #6, #9, ...), etc, until you only visit\nthe 100th door.\n\nQuestion: What state are the doors in after the last\npass? Which are open, which are closed?\n\n[Source http://rosettacode.org]","OneHundredDoorsTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class OneHundredDoorsTest {\n\n    @Test\n    public void life_the_universe_and_everything() {\n        int expected = 42;\n        int actual = OneHundredDoors.answer();\n        assertEquals(expected, actual);\n    }\n}\n","OneHundredDoors.java":"\npublic class OneHundredDoors {\n\n    public static int answer() {\n        return 42;\n    }\n}\n"}